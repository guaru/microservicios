<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Primary"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
    <fullyQualifiedTypeName name="javax.persistence.Transient"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
    <fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
    <fullyQualifiedTypeName name="springfox.documentation.schema.Collections"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="io.swagger.models.Contact"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.Contact"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RequestCallback"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="com.indra.springboot.app.gateway.filters.EjemploGlobalFilters"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.indra.springboot.app.gateway.filters.factory.EjemploGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseCookie"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.CircuitBreakerFactory"/>
    <fullyQualifiedTypeName name="java.lang.IllegalStateException"/>
    <fullyQualifiedTypeName name="java.util.concurrent.TimeUnit"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="com.indra.springboot.app.item.controllers.ItemController"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JCircuitBreakerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigBuilder"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.timelimiter.TimeLimiterConfig"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.timelimiter.annotation.TimeLimiter"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="com.indra.springboot.app.commons.entity.Prueba"/>
</qualifiedTypeNameHistroy>
